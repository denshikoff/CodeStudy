unit UDetail;
{10. Задан некоторый родительский класс. От него должно быть определено
несколько потомков. Определить класс Список элементов, который может
одновременно содержать разных потомков базового класса. Реализовать
операции добавления элемента в список, удаление элемента из списка, поиск
элемента в списке и другие. Решить задачи.
«Детали компьютера».

Любая деталь компьютера, хранимая на складе,
имеет идентификационный номер – целое число. Детали бывают
разными, например, память, процессор, монитор и т.д. Как следствие,
детали обладают разными характеристиками. На складе имеются
различные детали, для каждой из которой известно количество в штуках
и цена. Предложить покупателю разные варианты нужной ему детали с
заданными характеристиками на определенную сумму.}
interface
  uses SysUtils;
  type
    Detail = class
      private
        id:integer;
        price:integer;
      public
        constructor Create(indenf:integer);
        destructor destroy; override;
    end;

implementation
  constructor Detail.Create(indenf:integer);
  begin
    inherited Create;
    id := indenf;
  end;

  destructor Detail.destroy;
  begin
    inherited create;
  end;
end.

